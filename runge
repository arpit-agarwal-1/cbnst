#include <iostream>
using namespace std;
// A sample differential equation "dy/dx = 1+(y/x), 1<=x<=3"
float dydx(float x, float y) {
return (1 + (y / x));
}
// Finds value of y for a given x using step size h
// and initial value y0 at x0.
float rungeKutta(float x0, float y0, float x, float h) {
// Count number of iterations using step size or
// step height h
int n = static_cast<int>((x - x0) / h);
float k1, k2, k3, k4;
// Iterate for number of iterations
float y = y0;
for (int i = 1; i <= n; i++) {
// Apply Runge Kutta Formulas to find
// the next value of y
k1 = h * dydx(x0, y);
k2 = h * dydx(x0 + 0.5 * h, y + 0.5 * k1);
k3 = h * dydx(x0 + 0.5 * h, y + 0.5 * k2);
k4 = h * dydx(x0 + h, y + k3);
// Update the next value of y
y = y + (1.0 / 6.0) * (k1 + 2 * k2 + 2 * k3 + k4);
// Update the next value of x
x0 = x0 + h;
cout<<"y: "<<y<<" x: "<<x0<<endl;
}
return y;
}
// Driver Code
int main() {
float x0 = 1, y = 1, x = 3, h = 1;
cout << "The value of y at x is: " << rungeKutta(x0, y, x, h) << endl;
return
0
;
}
